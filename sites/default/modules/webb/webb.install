<?php

function webb_install() {
  
  switch ($GLOBALS['db_type']) {
    case 'mysqli':
    case 'mysql':
    db_query("CREATE TABLE if not exists {webb_board_positions} (
      nid int(10) unsigned NOT NULL default 0,
      tid int(10) unsigned NOT NULL default 0,
      PRIMARY KEY (nid, tid)
    ) /*!40100 DEFAULT CHARACTER SET utf8 */");
    db_query("CREATE TABLE if not exists {webb_board_ranks} (
      nid int(10) unsigned NOT NULL default 0,
      tid int(10) unsigned NOT NULL default 0,
      PRIMARY KEY (nid, tid)
    ) /*!40100 DEFAULT CHARACTER SET utf8 */");
    db_query("CREATE TABLE {webb_note_lookup} (
      nid int(11) NOT NULL,
      group_nid int(10) NOT NULL,
      created int(10) NOT NULL,
      PRIMARY KEY (nid, group_nid),
      KEY (group_nid, created, nid)
    ) COMMENT='Denormalization lookup table'
    /*!40100 DEFAULT CHARACTER SET utf8 */");
    break;
  }
  
  
  
}

/**
 * Add the denormalization table for the note listing.
 */
function webb_update_5001() {
  
  $ret[] = update_sql("CREATE TABLE {webb_note_lookup} (
      nid int(10) NOT NULL,
      group_nid int(10) NOT NULL,
      created int(11) NOT NULL,
      PRIMARY KEY (nid, group_nid),
      KEY (group_nid, created, nid)
    ) COMMENT='Denormalization lookup table'
    /*!40100 DEFAULT CHARACTER SET utf8 */");
 
  return $ret; 
}

/**
 * Populate the denormalization table.
 */
function webb_update_5002() {
    // See if we are being called for the first time
  if (!isset($_SESSION['webb_update_5002_nid'])) {
    // These variables keep track of our progress
    $_SESSION['webb_update_5002_nid'] = 0;
    $_SESSION['webb_update_5002_max'] = db_result(db_query("SELECT MAX(nid) FROM {node} WHERE type='note'")); 
  }

  // Fetch the next N note nodes and populate the lookup table.
  $limit = 100;
  $result = db_query_range("SELECT n.nid, created, group_nid
    FROM {node} n
      INNER JOIN {og_ancestry} oa ON n.nid=oa.nid
    WHERE n.type = 'note'
      AND n.status = 1
      AND n.nid > %d
    ORDER BY n.nid ASC", $_SESSION['webb_update_5002_nid'], 0, 100);
  while ($record = db_fetch_object($result)) {
    db_query("INSERT INTO {webb_note_lookup} (nid, group_nid, created) VALUES (%d, %d, %d)", array(
      $record->nid, $record->group_nid, $record->created,
    ));
    $_SESSION['webb_update_5002_nid'] = $record->nid; 
  }

  // See if we are done
  if ($_SESSION['webb_update_5002_nid'] < $_SESSION['webb_update_5002_max']) {
    // Not done yet. Return the progress.
    $return = array('#finished' => $_SESSION['webb_update_5002_nid'] / $_SESSION['webb_update_5002_max']);
    return $return;
  }
  else {
    // Done. Clean up and indicate we're finished.
    unset($_SESSION['webb_update_5002_nid']);
    unset($_SESSION['webb_update_5002_max']);
    return array('#finished' => 1);
  }
}

/**
 * Auto-set some settings needed by OG 7.x.
 */
function webb_update_5003() {
  $ret = array();
  
  variable_set('og_content_type_usage_character', 'group_post_standard_nomail');
  variable_set('og_content_type_usage_logentry', 'group_post_standard_nomail');
  variable_set('og_content_type_usage_note', 'group_post_standard_nomail');
  variable_set('og_content_type_usage_page', 'group_post_standard_nomail');
  
  return $ret;
}

/**
 * Force all users to not be subscribed to OG email notifications by default.
 */
function webb_update_5004() {
  $ret = array();
  
  $ret[] = update_sql("UPDATE {og_uid_global} SET og_email=0");
  
  return $ret;
}
